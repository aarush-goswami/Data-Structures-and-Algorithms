// Using Array
#include <stdio.h>
#include <stdlib.h>
#define MAX 100
int tree[MAX];
int size = 0;

void insert(int n)
{
    printf("Enter %d elements : ", n);
    for (int i = 0; i < n; i++)

    {
        scanf("%d", &tree[size++]);
    }
}

void preorder(int root)
{
    if (tree[root] == -1)
        return;
    printf("%d ", tree[root]); // print root
    preorder(2 * root + 1);    // left
    preorder(2 * root + 2);    // right
}

void inorder(int root)
{
    if (tree[root] == -1)
        return;
    inorder(2 * root + 1);     // left
    printf("%d ", tree[root]); // print root
    inorder(2 * root + 2);     // right
}

void postorder(int root)
{
    if (tree[root] == -1)
        return;
    postorder(2 * root + 1);   // left
    postorder(2 * root + 2);   // right
    printf("%d ", tree[root]); // print root
}
int search(int target)
{
    for (int i = 0; i < size; i++)
    {
        if (tree[i] == target)
            return i;
        else
            return -1;
    }
}
void init()
{

    for (int i = 0; i < MAX; i++)
    {
        tree[i] = -1;
    }
}

void delete(int value)
{
    int i = search(value);
    if (i == -1)
        printf("Element not found !!!\n");
    else
    {
        tree[i] = tree[size - 1];
        size--;
        printf("Element Deleted \n");
    }
}

int main()
{
    init();
    int n, choice, ele;
    while (1)
    {
        printf("1.Insert\n2.Preorder\n3.Inorder\n4.Postorder\n5.Search\n6.Delete\n7.Exit\n");
        printf("Enter Choice : ");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            printf("Enter n : ");
            scanf("%d", &n);
            insert(n);
            break;
        case 2:
            printf("\n preorder :  ");
            preorder(0);
            break;
        case 3:
            printf("\n inorder :  ");
            inorder(0);
            break;
        case 4:
            printf("\n postorder :  ");
            postorder(0);
            break;
        case 5:
            printf("Enter Element : ");
            scanf("%d", &ele);
            if(search(ele)!=-1){
                printf("%d",search(ele));
            }
            else 
            printf("Not Found \n");
            break;
        case 6:
            printf("Enter Element :");
            scanf("%d", &ele);
            delete (ele);
            break;
        case 7:
            exit(0);
        default:
            printf("Invalid CHoice !!!\n");
        }
        printf("\n");
    }
    return 0;
}
