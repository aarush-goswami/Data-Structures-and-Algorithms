#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

struct TreeNode{
    struct TreeNode*left;
    int data;
    struct TreeNode*right;
};
struct TreeNode*create(int ele){
   struct TreeNode*node=(struct TreeNode*)malloc(sizeof(struct TreeNode));
    node->data=ele;
    node->right=node->left=NULL;
    return node;
}
struct TreeNode* insert(struct TreeNode*root,int ele){
    struct TreeNode*node=create(ele);
    if(root==NULL)
        return node;
    else if(ele<root->data)
        root->left=insert(root->left,ele);
    else
        root->right=insert(root->right,ele);
    return root;
}
void preorder(struct TreeNode*root){
    if(root!=NULL){
        printf("%d ",root->data);
        preorder(root->left);
        preorder(root->right);
    }
}
void inorder(struct TreeNode*root){
    if(root!=NULL){
        inorder(root->left);
        printf("%d ",root->data);
        inorder(root->right);
    }
}
void postorder(struct TreeNode*root){
    if(root!=NULL){
        postorder(root->left);
        postorder(root->right);
        printf("%d ",root->data);
    }
}
int main() {
    struct TreeNode*root=NULL;
    int n,ele;
    scanf("%d ",&n);
    for(int i=0;i<n;i++){
        scanf("%d",&ele);
        root=insert(root,ele);
    }
    preorder(root);
    printf("\n");
    inorder(root);
    printf("\n");
    postorder(root);
    printf("\n");
    return 0;
}
